name: Trigger Azure DevOps Build

on:
  workflow_dispatch:
    inputs:
      orgName:
        description: 'Azure DevOps Organization Name'
        required: true
        default: 'devopsokn'
      projectName:
        description: 'Azure DevOps Project Name'
        required: true
        default: 'MyPOC'
      azurePipelineDefinitionId:
        description: 'Azure DevOps Pipeline Definition ID'
        required: true
        default: '260'
      ResourceYamlFile:
        description: 'Select the resource YAML file'
        required: true
        type: choice
        options:
          - 'vm_provision.yaml'
          - 'webapp_provision.yaml'

jobs:
  trigger-build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Setup Azure Login using Service Principal
      - name: Setup Azure Login using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Step 3: Get Resource YAML file
      - name: Get Resource YAML file
        run: |
          echo "Selected YAML file: ${{ github.event.inputs.ResourceYamlFile }}"
          echo "RESOURCE_YAML=${{ github.event.inputs.ResourceYamlFile }}" >> $GITHUB_ENV

      # Step 4: Test Authorization with simplified API call
      - name: Test Authorization with simplified API call
        run: |
          echo "Testing Authorization with simplified API call"
          curl --http1.1 -v -X GET \
            -H "Authorization: Basic $(echo -n ":${{ secrets.AZURE_DEVOPS_TOKEN }}" | base64)" \
            "https://dev.azure.com/${{ github.event.inputs.orgName }}/${{ github.event.inputs.projectName }}/_apis/projects?api-version=7.1-preview.1"

      # Step 5: Trigger Azure DevOps Build
      # Step 5: Trigger Azure DevOps Build
      - name: Trigger Azure DevOps Build
        run: |
          echo "Triggering Azure DevOps build with definition ID ${{ github.event.inputs.azurePipelineDefinitionId }} using YAML file ${{ env.RESOURCE_YAML }}..."
          
          # Create the Authorization header
          AUTH_HEADER="Authorization: Basic $(echo -n ":${{ secrets.AZURE_DEVOPS_TOKEN }}" | base64)"
          
          # Debugging: Output the raw token and the Authorization header (be cautious with printing tokens in logs)
          echo "Base64-encoded token: $(echo -n ":${{ secrets.AZURE_DEVOPS_TOKEN }}" | base64)"
          echo "Authorization header: $AUTH_HEADER"
          
          # Trigger build with proper header
          curl --http1.1 -v \
            -H "$AUTH_HEADER" \
            -H "Content-Type: application/json" \
            -d '{
                  "definition": {
                    "id": "${{ github.event.inputs.azurePipelineDefinitionId }}"
                  },
                  "sourceBranch": "refs/heads/main",
                  "parameters": {
                    "yamlFile": "${{ env.RESOURCE_YAML }}"
                  }
                }' \
            "https://dev.azure.com/${{ github.event.inputs.orgName }}/${{ github.event.inputs.projectName }}/_apis/build/builds?api-version=6.1-preview.6"

      # Optional: Check if build was successfully triggered
      - name: Check if build was triggered
        run: |
          if [ $? -eq 0 ]; then
            echo "Build triggered successfully."
          else
            echo "Failed to trigger the build."
            exit 1
          fi
