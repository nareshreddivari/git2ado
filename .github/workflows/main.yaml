name: Trigger Azure Pipeline

on:
  workflow_dispatch:
    inputs:
      pipelineName:
        description: 'Enter a custom pipeline name (Leave empty to generate dynamically)'
        required: false
        default: ''
      orgName:
        description: 'Enter your Azure DevOps Organization name'
        required: true
        default: 'devopsokn'
      projectName:
        description: 'Enter your Azure DevOps Project name'
        required: true
        default: 'MyPOC'
      targetRepositoryName:
        description: 'Enter the target repository name'
        required: true
        default: 'test_App_Repo'
      ResourceYamlFile:
        description: 'Select the resource YAML file'
        required: true
        type: choice
        options:
          - 'vm_provision.yaml'
          - 'webapp_provision.yaml'

jobs:
  trigger-azure-pipeline:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Setup Azure Login using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set dynamic pipeline name if not provided
        id: set-pipeline-name
        run: |
          if [ -z "${{ github.event.inputs.pipelineName }}" ]; then
            # Generate dynamic pipeline name based on date and repo name
            generated_pipeline_name="webapp-pipeline-$(date +'%Y%m%d%H%M%S')"
            echo "Generated pipeline name: $generated_pipeline_name"
            echo "::set-output name=pipelineName::$generated_pipeline_name"
          else
            echo "::set-output name=pipelineName::${{ github.event.inputs.pipelineName }}"
          fi

      - name: Trigger Azure Pipeline to Create and Deploy
        uses: azure/pipelines@v1  # Using a custom Azure pipeline
        with:
          organization: ${{ github.event.inputs.orgName }}
          project: ${{ github.event.inputs.projectName }}
          pipeline_name: ${{ steps.set-pipeline-name.outputs.pipelineName }}
          resource_yaml: ${{ github.event.inputs.ResourceYamlFile }}
          target_repository: ${{ github.event.inputs.targetRepositoryName }}
