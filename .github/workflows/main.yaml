name: Trigger Existing Azure Pipeline

on:
  workflow_dispatch:
    inputs:
      orgName:
        description: 'Enter your Azure DevOps Organization name'
        required: true
        default: 'devopsokn'
      projectName:
        description: 'Enter your Azure DevOps Project name'
        required: true
        default: 'MyPOC'
      azurePipelineName:
        description: 'Enter the target repository name'
        required: true
        default: 'test_Automation_Repo'
      ResourceYamlFile:
        description: 'Select the resource YAML file'
        required: true
        type: choice
        options:
          - 'vm_provision.yaml'
          - 'webapp_provision.yaml'

jobs:
  trigger-azure-pipeline:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Setup Azure Login using Service Principal
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Get Azure DevOps Pipeline ID
        id: get-pipeline-id
        run: |
          echo "Getting the Azure DevOps pipeline ID..."
          PIPELINE_NAME="${{ github.event.inputs.azurePipelineName }}"  # Update with the actual pipeline name
          
          # Base64 encode the PAT
          BASE64_PAT=$(echo -n ":${{ secrets.AZURE_DEVOPS_TOKEN }}" | base64)
          
          # Request Azure DevOps pipeline ID
          API_RESPONSE=$(curl -L -s -v -X GET \
            "https://dev.azure.com/${{ github.event.inputs.orgName }}/${{ github.event.inputs.projectName }}/_apis/pipelines?api-version=7.1-preview.1" \
            -H "Authorization: Basic $BASE64_PAT")
          
          echo "API Response: $API_RESPONSE"
          
          # Extract the Pipeline ID from the response
          PIPELINE_ID=$(echo $API_RESPONSE | jq -r ".value[] | select(.name == \"$PIPELINE_NAME\") | .id")
          
          if [ -z "$PIPELINE_ID" ]; then
            echo "Error: Pipeline ID not found"
            exit 1
          fi
          
          echo "Pipeline ID: $PIPELINE_ID"
          
          echo "pipeline_id=$PIPELINE_ID" >> $GITHUB_ENV

      - name: Trigger Azure Pipeline
        run: |
          if [ -z "${{ env.pipeline_id }}" ]; then
            echo "Error: Pipeline ID not found"
            exit 1
          fi
          echo "Triggering the Azure DevOps pipeline..."
          
          # Trigger the Azure DevOps pipeline with the required variables
          curl -L -X POST \
            "https://dev.azure.com/${{ github.event.inputs.orgName }}/${{ github.event.inputs.projectName }}/_apis/pipelines/${{ env.pipeline_id }}/runs?api-version=7.1-preview.1" \
            -H "Content-Type: application/json" \
            -H "Authorization: Basic $(echo -n ":${{ secrets.AZURE_DEVOPS_TOKEN }}" | base64)" \
            -d '{
              "variables": {
                "ResourceYamlFile": "${{ github.event.inputs.ResourceYamlFile }}",
                "azurePipelineName": "${{ github.event.inputs.azurePipelineName }}",
                "orgName": "${{ github.event.inputs.orgName }}",
                "projectName": "${{ github.event.inputs.projectName }}"
              }
            }' --http1.1
        env:
          AZURE_DEVOPS_TOKEN: ${{ secrets.AZURE_DEVOPS_TOKEN }}
